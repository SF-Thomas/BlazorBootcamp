 @page "/learn/blazorjs"
@inject IJSRuntime IJSRuntime

<h3>BlazorJs</h3>

<div class="row">
	<button class="btn btn-secondary m-2" style="width: 200px;" @onclick="TestConfirmBox">Test Confirm Button</button>
</div>
<br />
<div class="row">
	<button class="btn btn-success m-2" style="width: 200px;" @onclick="ToasterSuccess">Toaster success</button>
	<button class="btn btn-danger m-2" style="width: 200px;" @onclick="ToasterFailure">Toaster failure</button>
</div>
<br />
<div class="row">
	<button class="btn btn-success m-2" style="width: 200px;" @onclick="SweetAlertSuccess">SweetAlert success</button>
	<button class="btn btn-danger m-2" style="width: 200px;" @onclick="SweetAlertFailure">SweetAlert failure</button>
</div>
<br />
<div class="row">
	@if (ConfirmResult)
	{
		<p>Confirmation has been made!</p>
	}
	else
	{
		<p>Confirmation pending!</p>
	}
</div>

@code {
	private string ConfirmMessage = "Are you sure you want to click?";
	private bool ConfirmResult { get; set; }

	private async Task TestConfirmBox()
	{
		ConfirmResult = await IJSRuntime.InvokeAsync<bool>("confirm", ConfirmMessage);
	}

	private async Task ToasterSuccess()
	{
		await IJSRuntime.ToastrSuccessAsync("Operation Successful");
	}

	private async Task ToasterFailure()
	{
		await IJSRuntime.ToastrErrorAsync("Operation failed");
	}

	private async Task SweetAlertSuccess()
	{
		await IJSRuntime.InvokeVoidAsync("ShowSwal","success","Operation Successful");
	}

	private async Task SweetAlertFailure()
	{
		await IJSRuntime.InvokeVoidAsync("ShowSwal", "error", "Operation Failed");
	}
}
